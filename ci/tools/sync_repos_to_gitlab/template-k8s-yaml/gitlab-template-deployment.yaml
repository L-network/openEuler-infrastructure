---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    name: gitlab
  name: gitlab

# install ingress to k8s cluster first
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: "5G"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "1800"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "1800"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "1800"
  name: gitlab-instance-1-ingress
  namespace: gitlab
spec:
  rules:
    - host: gitlab.example.com
      http:
        paths:
          - backend:
              serviceName: gitlab-instance-1-service
              servicePort: 80
            path: /

# change the storageclassname from your cluster storage driver
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: gitlab-instance-1-data-volume
  namespace: gitlab
spec:
  storageClassName: "csi-disk"               # use the storageclass name in your cluster
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgre-instance-1-data-volume
  namespace: gitlab
spec:
  storageClassName: "csi-disk"               # use the storageclass name in your cluster
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-instance-1-data-volume
  namespace: gitlab
spec:
  storageClassName: "csi-disk"               # use the storageclass name in your cluster
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

# network config
---
apiVersion: v1
kind: Service
metadata:
  name: gitlab-instance-1-service
  namespace: gitlab
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: http
    - name: ssh
      port: 22
      targetPort: ssh
  selector:
    app: gitlab-instance-1

---
apiVersion: v1
kind: Service
metadata:
  name: redis-instance-1-service
  namespace: gitlab
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 6379
    targetPort: 6379
  selector:
    app: redis-instance-1

---
apiVersion: v1
kind: Service
metadata:
  name: postgre-instance-1-service
  namespace: gitlab
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 5432
      targetPort: 5432
  selector:
    app: postgre-instance-1

# container deployment
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gitlab-instance-1
  namespace: gitlab
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gitlab-instance-1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: gitlab-instance-1
    spec:
      containers:
      - name: gitlab
        image: swr.cn-north-4.myhuaweicloud.com/openeuler/public/gitlab:1.15.2.2
        env:
        - name: TZ
          value: "Asia/Shanghai"
        - name: GITLAB_TIMEZONE
          value: "Asia/Shanghai"
        - name: GITLAB_SECRETS_DB_KEY_BASE
          value: ""            # pwgen -Bsv1 64
        - name: GITLAB_SECRETS_SECRET_KEY_BASE
          value: ""            # pwgen -Bsv1 64
        - name: GITLAB_SECRETS_OTP_KEY_BASE
          value: ""            # pwgen -Bsv1 64
        - name: GITLAB_ROOT_PASSWORD
          value: ""            
        - name: GITLAB_ROOT_EMAIL
          value: "xxxxxx@qq.com"   # enter your email address
        - name: GITLAB_EMAIL
          value: "xxxxxx@qq.com"   # enter your email address
        - name: GITLAB_EMAIL_REPLY_TO
          value: "noreply@example.com"  # 
        - name: GITLAB_INCOMING_EMAIL_ADDRESS
          value: "noreply@example.com"
        - name: GITLAB_EMAIL_DISPLAY_NAME
          value: "GitLab"               # set your email sender name
        - name: GITLAB_HOST
          value: "gitlab.example.com"   # enter your gitlab domain name
        - name: GITLAB_PORT
          value: "80"               
        - name: GITLAB_SSH_PORT
          value: "22"
        - name: GITLAB_NOTIFY_ON_BROKEN_BUILDS
          value: "false"
        - name: GITLAB_NOTIFY_PUSHER
          value: "false"
        - name: GITLAB_BACKUP_SCHEDULE
          value: "daily"               
        - name: GITLAB_BACKUP_TIME
          value: "01:00"                # set anytime you want
        - name: DB_TYPE
          value: "postgres"
        - name: DB_HOST
          value: "postgre-instance-1-service.gitlab.svc.cluster.local"
        - name: DB_PORT
          value: "5432"
        - name: DB_USER
          value: "root"                 # defined in postgre
        - name: DB_PASS
          value: "xxxx"           # defined in postgre
        - name: DB_NAME
          value: "postgre"              # defined in postgre
        - name: REDIS_HOST
          value: "redis-instance-1-service.gitlab.svc.cluster.local"
        - name: REDIS_PORT
          value: "6379"
        - name: SMTP_ENABLED
          value: "true"
        - name: SMTP_DOMAIN
          value: "qq.com"               # set smtp domain
        - name: SMTP_HOST
          value: "smtp.qq.com"          # set smtp host
        - name: SMTP_PORT
          value: "25"                   # set smtp port
        - name: SMTP_USER
          value: "xxx@qq.com"           # set smtp user
        - name: SMTP_PASS
          value: "xxxxx"                # set smtp password
        - name: SMTP_STARTTLS
          value: "true"
        - name: SMTP_AUTHENTICATION
          value: "login"
        ports:
        - name: http
          containerPort: 80
        - name: ssh
          containerPort: 22
        resources:
          requests:
            cpu: 4000m
            memory: 8000Mi
          limits:
            cpu: 8000m                   # set container limit cpu
            memory: 16000Mi              # set container limit mem
        volumeMounts:
        - mountPath: /home/git/data
          name: gitlab-data
      restartPolicy: Always
      volumes:
      - name: gitlab-data
        persistentVolumeClaim:
          claimName: gitlab-instance-1-data-volume

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-instance-1
  namespace: gitlab
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-instance-1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: redis-instance-1
    spec:
      containers:
      - image: swr.cn-north-4.myhuaweicloud.com/openeuler/public/redis:1.6.2.6
        imagePullPolicy: IfNotPresent
        name: redis
        ports:
        - name: redis
          containerPort: 6379
        volumeMounts:
        - mountPath: /data
          name: redis-data
        livenessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          timeoutSeconds: 1
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: redis-instance-1-data-volume

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgre-instance-1
  namespace: gitlab
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgre-instance-1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: postgre-instance-1
    spec:
      containers:
      - image: swr.cn-north-4.myhuaweicloud.com/openeuler/public/postgres:1.15.1
        imagePullPolicy: IfNotPresent
        name: postgre
        ports:
        - name: postgre
          containerPort: 5432
        env:
        - name: POSTGRES_PASSWORD
          value: "xxxx"               # set postgre password
        - name: POSTGRES_DB
          value: "postgre"                  # set postgre db name
        - name: PGDATA
          value: "/var/lib/postgresql/data"     # set postgre data storage path
        - name: POSTGRES_USER
          value: "root"                     # set postgre db user name
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgre-data
      volumes:
      - name: postgre-data
        persistentVolumeClaim:
          claimName: postgre-instance-1-data-volume
